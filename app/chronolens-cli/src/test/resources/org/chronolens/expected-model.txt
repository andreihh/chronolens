file guava/src/com/google/common/eventbus/Dispatcher.java
`-- type Dispatcher
    |-- supertypes:
    |-- modifiers:
    |   |-- abstract
    |   `-- class
    `-- members:
        |-- function perThreadDispatchQueue()
        |   |-- parameters:
        |   |-- modifiers:
        |   |   |-- static
        |   |   `-- @return:Dispatcher
        |   `-- body: "{" ... (trimmed)
        |-- function legacyAsync()
        |   |-- parameters:
        |   |-- modifiers:
        |   |   |-- static
        |   |   `-- @return:Dispatcher
        |   `-- body: "{" ... (trimmed)
        |-- function immediate()
        |   |-- parameters:
        |   |-- modifiers:
        |   |   |-- static
        |   |   `-- @return:Dispatcher
        |   `-- body: "{" ... (trimmed)
        |-- function dispatch(Object, Iterator<Subscriber>)
        |   |-- parameters:
        |   |   |-- event
        |   |   `-- subscribers
        |   |-- modifiers:
        |   |   |-- abstract
        |   |   `-- @return:void
        |   `-- body: <none>
        |-- type PerThreadQueuedDispatcher
        |   |-- supertypes:
        |   |   `-- Dispatcher
        |   |-- modifiers:
        |   |   |-- private
        |   |   |-- static
        |   |   |-- final
        |   |   `-- class
        |   `-- members:
        |       |-- variable queue
        |       |   |-- modifiers:
        |       |   |   |-- private
        |       |   |   |-- final
        |       |   |   `-- @type:ThreadLocal<Queue<Event>>
        |       |   `-- initializer: "new ThreadLocal<Queue<Event>>() {" ... (trimmed)
        |       |-- variable dispatching
        |       |   |-- modifiers:
        |       |   |   |-- private
        |       |   |   |-- final
        |       |   |   `-- @type:ThreadLocal<Boolean>
        |       |   `-- initializer: "new ThreadLocal<Boolean>() {" ... (trimmed)
        |       |-- function dispatch(Object, Iterator<Subscriber>)
        |       |   |-- parameters:
        |       |   |   |-- event
        |       |   |   `-- subscribers
        |       |   |-- modifiers:
        |       |   |   |-- @Override
        |       |   |   `-- @return:void
        |       |   `-- body: "{" ... (trimmed)
        |       `-- type Event
        |           |-- supertypes:
        |           |-- modifiers:
        |           |   |-- private
        |           |   |-- static
        |           |   |-- final
        |           |   `-- class
        |           `-- members:
        |               |-- variable event
        |               |   |-- modifiers:
        |               |   |   |-- private
        |               |   |   |-- final
        |               |   |   `-- @type:Object
        |               |   `-- initializer: <none>
        |               |-- variable subscribers
        |               |   |-- modifiers:
        |               |   |   |-- private
        |               |   |   |-- final
        |               |   |   `-- @type:Iterator<Subscriber>
        |               |   `-- initializer: <none>
        |               `-- function Event(Object, Iterator<Subscriber>)
        |                   |-- parameters:
        |                   |   |-- event
        |                   |   `-- subscribers
        |                   |-- modifiers:
        |                   |   `-- private
        |                   `-- body: "{" ... (trimmed)
        |-- type LegacyAsyncDispatcher
        |   |-- supertypes:
        |   |   `-- Dispatcher
        |   |-- modifiers:
        |   |   |-- private
        |   |   |-- static
        |   |   |-- final
        |   |   `-- class
        |   `-- members:
        |       |-- variable queue
        |       |   |-- modifiers:
        |       |   |   |-- private
        |       |   |   |-- final
        |       |   |   `-- @type:ConcurrentLinkedQueue<EventWithSubscriber>
        |       |   `-- initializer: "Queues.newConcurrentLinkedQueue()"
        |       |-- function dispatch(Object, Iterator<Subscriber>)
        |       |   |-- parameters:
        |       |   |   |-- event
        |       |   |   `-- subscribers
        |       |   |-- modifiers:
        |       |   |   |-- @Override
        |       |   |   `-- @return:void
        |       |   `-- body: "{" ... (trimmed)
        |       `-- type EventWithSubscriber
        |           |-- supertypes:
        |           |-- modifiers:
        |           |   |-- private
        |           |   |-- static
        |           |   |-- final
        |           |   `-- class
        |           `-- members:
        |               |-- variable event
        |               |   |-- modifiers:
        |               |   |   |-- private
        |               |   |   |-- final
        |               |   |   `-- @type:Object
        |               |   `-- initializer: <none>
        |               |-- variable subscriber
        |               |   |-- modifiers:
        |               |   |   |-- private
        |               |   |   |-- final
        |               |   |   `-- @type:Subscriber
        |               |   `-- initializer: <none>
        |               `-- function EventWithSubscriber(Object, Subscriber)
        |                   |-- parameters:
        |                   |   |-- event
        |                   |   `-- subscriber
        |                   |-- modifiers:
        |                   |   `-- private
        |                   `-- body: "{" ... (trimmed)
        `-- type ImmediateDispatcher
            |-- supertypes:
            |   `-- Dispatcher
            |-- modifiers:
            |   |-- private
            |   |-- static
            |   |-- final
            |   `-- class
            `-- members:
                |-- variable INSTANCE
                |   |-- modifiers:
                |   |   |-- private
                |   |   |-- static
                |   |   |-- final
                |   |   `-- @type:ImmediateDispatcher
                |   `-- initializer: "new ImmediateDispatcher()"
                `-- function dispatch(Object, Iterator<Subscriber>)
                    |-- parameters:
                    |   |-- event
                    |   `-- subscribers
                    |-- modifiers:
                    |   |-- @Override
                    |   `-- @return:void
                    `-- body: "{" ... (trimmed)
